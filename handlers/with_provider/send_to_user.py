from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery, ContentTypes

import analytics
import config
import db
from keyboards import keyboards
from keyboards.support.support_keyboards import create_keyboard, confirm_order, answer_of_provider, cancel_connection
from misc import dp


@dp.message_handler(user_id=config.ADMIN_ID[0], commands=['answer'])
async def get_id_user(message: Message, state: FSMContext):
    data = message.text.split()
    await state.update_data({'user_id': data[1], 'number_order': data[-1] if len(data) == 3 else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'})
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç')
    await state.set_state('answer_to_user')


@dp.callback_query_handler(answer_of_provider.filter())
async def get_data_order(call: CallbackQuery, state: FSMContext, callback_data: dict):
    await call.answer()
    id_tg = callback_data.get('id_tg')
    number_order = callback_data.get('number_order')
    await state.update_data({'user_id': id_tg, 'number_order': number_order})
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç', reply_markup=cancel_connection)
    await state.set_state('answer_to_user')


@dp.message_handler(state='answer_to_user', content_types=ContentTypes.ANY)
async def send_answer(message: Message, state: FSMContext):
    data = await state.get_data()
    number_order = data.get('number_order')
    user_id = data.get('user_id')
    phone = db.get_data('phone', 'users', {'id_tg': ('=', message.from_user.id)})[0].phone
    if message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É':
        await dp.bot.edit_message_reply_markup(
            chat_id=user_id,
            message_id=data.get('message_id'),
            reply_markup=create_keyboard(phone, number_order, message.from_user.id)
        )
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboards.menu)
        await state.finish()
        analytics.insert_data('send_answer')
        return
    message_info = await message.copy_to(chat_id=user_id)
                                         # reply_markup=create_keyboard(phone, number_order, message.from_user.id))
    await state.update_data(message_id=message_info.message_id)


@dp.callback_query_handler(confirm_order.filter())
async def confirm_order(call: CallbackQuery, state: FSMContext, callback_data: dict):
    await call.answer()
    number_order = callback_data.get('number_order')
    phone = callback_data.get('phone')
    id_provider = callback_data.get('id_provider')
    answer = f"""
üì¶ –ó–∞–∫–∞–∑ ‚Ññ{number_order} –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≤–∞—Å\n
üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø–æ –∑–∞–∫–∞–∑—É. –¢–µ–ª: {phone}
"""
    await call.message.answer(answer)
    await dp.bot.send_message(chat_id=id_provider,
                              text=f'–ó–∞–∫–∞–∑ {number_order} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {call.from_user.id}: '
                                   f'{call.from_user.full_name} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
    analytics.insert_data('confirm_order')
