from aiogram.types import Message
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

import config
from db import get_reviews, insert_reviews
from misc import dp, bot
import keyboards


class Reviews(StatesGroup):
    answer = State()
    insert = State()


@dp.message_handler(text='üòÄ –û—Ç–∑—ã–≤—ã', state='*')
async def start_reviews(message: Message, state: FSMContext):
    reviews = get_reviews()
    if len(reviews) > 3:
        await message.answer(f'–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π::\n\n'
                             f'1. {reviews[0][0]}\n'
                             f'2. {reviews[1][0]}\n'
                             f'3. {reviews[2][0]}\n\n'
                             f'–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤üëá', reply_markup=keyboards.reviews_key)
        await state.update_data({'reviews': reviews, 'cnt': 3})
        await Reviews.answer.set()
    else:
        if len(reviews) == 0:
            await message.answer('–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—èüëá', reply_markup=keyboards.key_cancel)
            await Reviews.answer.set()
            return
        text = '–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n'
        cnt = 1
        for review in reviews:
            text += f'{cnt}. {review[0]}\n'
            cnt += 1
        await message.answer(f'{text}\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤üëá', reply_markup=keyboards.key_cancel)
        await Reviews.answer.set()


@dp.message_handler(text='–ï—â–µ', state=Reviews.answer)
async def send_more_reviews(message: Message, state: FSMContext):
    data = await state.get_data()
    text = str()
    cnt = data['cnt']
    for review in data['reviews'][cnt:]:
        if cnt < data['cnt'] + 3:
            text += f'{cnt + 1}. {review[0]}\n'
            cnt += 1
        else:
            break

    if cnt < len(data['reviews']):
        keyboard = keyboards.reviews_key
        await state.update_data(cnt=cnt)
    else:
        keyboard = keyboards.key_cancel
    await message.answer(f'{text}\n –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—èüëá', reply_markup=keyboard)


@dp.message_handler(state=Reviews.answer)
async def get_review(message: Message, state: FSMContext):
    await bot.send_message(chat_id=config.ADMIN_ID, text=f'–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n{message.text}')
    await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!', reply_markup=keyboards.key_cancel)
    await state.finish()


@dp.message_handler(text='–û—Ç–∑—ã–≤', user_id=config.ADMIN_ID, state='*')
async def write_review(message: Message, state: FSMContext):
    await message.answer('–ü—Ä–∏—à–ª–∏ –æ—Ç–∑—ã–≤!')
    await Reviews.insert.set()


@dp.message_handler(state=Reviews.insert, user_id=config.ADMIN_ID)
async def get_review_on_write(message: Message, state: FSMContext):
    insert_reviews(message.text)
    await message.answer('–û—Ç–∑—ã–≤ –∑–∞–ø–∏—Å–∞–Ω –≤ –±–∞–∑—É')
    await state.finish()
